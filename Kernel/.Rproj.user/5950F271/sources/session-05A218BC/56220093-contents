#lista de pacotes
pacotes <- c("tidyverse", "data.table", "readr", 
             "scales", "readxl", "writexl", "purrr", "classInt",
             "lubridate", "foreign", "ggplot2", "tidyr", "dplyr", "patchwork",
             "sf", "geobr", "sp", "maptools", "rgdal", "gridExtra", "grid")

#iniciar/instalar pacotes
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
  instalador <- pacotes[!pacotes %in% installed.packages()]
  for(i in 1:length(instalador)) {
    install.packages(instalador, dependencies = T)
    break()}
  sapply(pacotes, require, character = T)
} else {
  sapply(pacotes, require, character = T)
}

#configurações iniciais
rm(list=ls()) # limpa  o ambiente
gc(T) # limpa memória
Sys.setlocale("LC_ALL","pt-BR.UTF-8")

#insira o caminho da pasta raiz.
setwd("F:/lucas.sanglard/OneDrive - Ministério da Saúde/Área de Trabalho/Rotina de Monitoramento - VSPEA")
getwd() #teste de getwd







#Indicador 1: Coeficiente de incidência de intoxicação exógena por agrotóxicos
#Leitura dos bancos de dados
pop <- read.csv("./aux_data/pop.csv", sep = ";", fileEncoding = "latin1") #ler arquivos DE POPULAÇÃO
intoxicacoes <- read_csv("./aux_data/not_agro_limpo23-08.csv") |> select(3:95) #ler base de intoxicações

#TRATAR BASE DE INTOXICAÇÕES BASEADO NOS INDICADORES DE INTERESSE.
intoxicacoes <- intoxicacoes |> filter(CLASSI_FIN == 1 | CLASSI_FIN == 3) #filtrar apenas casos confirmados.

# Resumir o número de casos por município e ano
casos_por_municipio_ano <- intoxicacoes |>
  group_by(ID_MUNICIP, NU_ANO) |>
  dplyr::summarise(total_casos = n())

# Transformar a tabela de casos para o formato wide (largo)
casos_wider <- casos_por_municipio_ano |>
  pivot_wider(
    names_from = NU_ANO,         # Coloca o ano como nomes das novas colunas
    values_from = total_casos    # Usa os valores de total_casos como conteúdo das novas colunas
  )

#dados unidos
dados_unidos <- casos_wider |>
  left_join(pop, by = c("ID_MUNICIP" = "COD_6D"))

# Substituir todos os NA por 0 em todas as colunas do data frame
dados_unidos <- dados_unidos |>
  mutate_all(~replace(., is.na(.), 0))

# Calcular a taxa de incidência para cada ano e município
dados_unidos <- dados_unidos |>
  rowwise() |>
  mutate(
    taxa_incidencia_2007 = round(ifelse(X2007 > 0, (get("2007") / X2007) * 100000, 0), 2),
    taxa_incidencia_2008 = round(ifelse(X2008 > 0, (get("2008") / X2008) * 100000, 0), 2),
    taxa_incidencia_2009 = round(ifelse(X2009 > 0, (get("2009") / X2009) * 100000, 0), 2),
    taxa_incidencia_2010 = round(ifelse(X2010 > 0, (get("2010") / X2010) * 100000, 0), 2),
    taxa_incidencia_2011 = round(ifelse(X2011 > 0, (get("2011") / X2011) * 100000, 0), 2),
    taxa_incidencia_2012 = round(ifelse(X2012 > 0, (get("2012") / X2012) * 100000, 0), 2),
    taxa_incidencia_2013 = round(ifelse(X2013 > 0, (get("2013") / X2013) * 100000, 0), 2),
    taxa_incidencia_2014 = round(ifelse(X2014 > 0, (get("2014") / X2014) * 100000, 0), 2), 
    taxa_incidencia_2015 = round(ifelse(X2015 > 0, (get("2015") / X2015) * 100000, 0), 2),
    taxa_incidencia_2016 = round(ifelse(X2016 > 0, (get("2016") / X2016) * 100000, 0), 2),
    taxa_incidencia_2017 = round(ifelse(X2017 > 0, (get("2017") / X2017) * 100000, 0), 2),
    taxa_incidencia_2018 = round(ifelse(X2018 > 0, (get("2018") / X2018) * 100000, 0), 2),
    taxa_incidencia_2019 = round(ifelse(X2019 > 0, (get("2019") / X2019) * 100000, 0), 2),
    taxa_incidencia_2020 = round(ifelse(X2020 > 0, (get("2020") / X2020) * 100000, 0), 2),
    taxa_incidencia_2021 = round(ifelse(X2021 > 0, (get("2021") / X2021) * 100000, 0), 2),
    taxa_incidencia_2022 = round(ifelse(X2022 > 0, (get("2022") / X2022) * 100000, 0), 2),
    taxa_incidencia_2023 = round(ifelse(X2023 > 0, (get("2023") / X2023) * 100000, 0), 2),
    taxa_incidencia_2024 = round(ifelse(X2024 > 0, (get("2024") / X2024) * 100000, 0), 2)
  ) |>
  ungroup()





#########################################
##########         MAPA        ##########
#########################################

#para baixar os shapefiles, basta rodar 1 vez.
#municipios <- geobr::read_municipality(simplified = TRUE, showProgress = TRUE, year = 2010, code_muni = "all")
#st_write(municipios, "./municipios_2010.shp", delete_dsn = TRUE)

#LER SHAPEFILE BAIXADO
municipios <- st_read("municipios_2010.shp")
municipios <-municipios |> 
  mutate(COD_6D = substr(code_mn,1,6))

#JUNTAR MAPA COM DADOS DE INTOXICACOES
dados_unidos <- dados_unidos |>
  mutate(ID_MUNICIP = as.character(ID_MUNICIP))

dados_mapa <- municipios |>
  left_join(dados_unidos, by = c("COD_6D" = "ID_MUNICIP")) |> 
  st_as_sf()


# Função para gerar intervalos fixos de classes
gerar_classes_fixas <- function() {
  # Definir os limites manuais para as classes
  breaks <- c(0.01, 10, 20, 30, 40, 50, Inf)
  return(breaks)
}

# Função para formatar os labels das classes com base nos intervalos fixos
formatar_classes_fixas <- function(breaks, data, coluna_taxa) {
  # Gerar rótulos normais para os intervalos
  labels <- sprintf("%.0f a %.0f", breaks[-length(breaks)], breaks[-1])
  
  # Calcular o valor mínimo e máximo para os dados maiores que o limite superior (50)
  max_value <- max(data[[coluna_taxa]], na.rm = TRUE)
  min_value <- min(data[[coluna_taxa]][data[[coluna_taxa]] > 50], na.rm = TRUE)
  
  # Atualizar o último rótulo para mostrar a variação de valores acima de 50
  labels[length(labels)] <- sprintf("> 50 (%.0f a %.0f)", min_value, max_value)
  
  return(labels)
}


# Função para plotar o mapa
plot_mapa <- function(data, ano) { 
  coluna_taxa <- paste0("taxa_incidencia_", ano)  # Nome da coluna de taxa
  
  # Substituir NA por 0 para evitar problemas ao plotar
  data[[coluna_taxa]] <- ifelse(is.na(data[[coluna_taxa]]), 0, data[[coluna_taxa]])
  
  # Gerar as classes com intervalos fixos
  breaks <- gerar_classes_fixas()
  
  # Formatar os rótulos das classes
  labels <- formatar_classes_fixas(breaks, data, coluna_taxa)
  
  # Criar nova coluna com a classificação
  data <- data |>
    mutate(classes = cut(data[[coluna_taxa]], breaks = breaks, include.lowest = TRUE, labels = labels))
  
  # Plotar o mapa com as cores e os intervalos ajustados
  ggplot(data = data) +
    geom_sf(aes(fill = classes), color = NA) +
    scale_fill_viridis_d(option = "C", na.value = "grey80", direction = -1) +  # Ajustar o sentido das cores
    labs(title = ano, fill = "Incidência") +
    theme_void() +
    theme(plot.title = element_text(hjust = 0.5, size = 10))
}

# Gerar os mapas para cada ano e combinar em uma única visualização
mapa_2007 <- plot_mapa(dados_mapa, 2007)
mapa_2010 <- plot_mapa(dados_mapa, 2010)
mapa_2013 <- plot_mapa(dados_mapa, 2013)
mapa_2016 <- plot_mapa(dados_mapa, 2016)
mapa_2019 <- plot_mapa(dados_mapa, 2019)
mapa_2023 <- plot_mapa(dados_mapa, 2023)



#TITULO DO MAPA
titulo <- textGrob("Coeficiente de Incidência de Intoxicações Exógenas por Agrotóxicos por 100.000 habitantes",
                   gp = gpar(fontsize = 20, fontface = "bold"), just = "centre")

# Combinar os gráficos com um único título centralizado
indicador1 <- grid.arrange(titulo, 
                           arrangeGrob(mapa_2007, mapa_2010, mapa_2013, 
                                       mapa_2016, mapa_2019, mapa_2023, ncol = 3),
                          nrow = 2, heights = c(0.1, 1))

# Salvar o gráfico combinado
ggsave("./RESULTADOS/Indicadores/1_Incidencia.png", plot = indicador1, width = 16, height = 9, dpi = 400, units = "in")







#teste para quantificar a quantidade de municipios por ano. 
# Contar quantos valores são maiores que 0 na coluna "taxa_inci_rur2010"
contagem_maiores_que_zero <- sum(mapa_2019[["data"]][["taxa_incidencia_2019"]] > 0, na.rm = TRUE)
contagem_maiores_que_zero <- sum(dados_unidos[["taxa_incidencia_2019"]] > 0, na.rm = TRUE)
# Exibe o resultado
print(contagem_maiores_que_zero)










#########################################
########## GRAFICOS POR REGIÃO ##########
#########################################

# Adicionar coluna REGIAO com base no código do município
dados_unidos <- dados_unidos |> 
  mutate(REGIAO = substr(ID_MUNICIP, 1, 1))

# Renomear as regiões usando case_when
dados_unidos <- dados_unidos |> 
  mutate(REGIAO = case_when(
    REGIAO == "1" ~ "NORTE",
    REGIAO == "2" ~ "NORDESTE",
    REGIAO == "3" ~ "SUDESTE",
    REGIAO == "4" ~ "SUL",
    REGIAO == "5" ~ "CENTRO OESTE"
  ))

# Substituir todos os NA por 0 em todas as colunas do data frame
dados_unidos <- dados_unidos |>
  mutate_all(~replace(., is.na(.), 0))

# Agrupar por região e calcular a soma dos casos e a soma da população por ano
dados_por_regiao <- dados_unidos %>%
  group_by(REGIAO) %>%
  dplyr::summarise(
    total_casos_2007 = sum(`2007`, na.rm = TRUE),
    total_casos_2008 = sum(`2008`, na.rm = TRUE),
    total_casos_2009 = sum(`2009`, na.rm = TRUE),
    total_casos_2010 = sum(`2010`, na.rm = TRUE),
    total_casos_2011 = sum(`2011`, na.rm = TRUE),
    total_casos_2012 = sum(`2012`, na.rm = TRUE),
    total_casos_2013 = sum(`2013`, na.rm = TRUE),
    total_casos_2014 = sum(`2014`, na.rm = TRUE),
    total_casos_2015 = sum(`2015`, na.rm = TRUE),
    total_casos_2016 = sum(`2016`, na.rm = TRUE),
    total_casos_2017 = sum(`2017`, na.rm = TRUE),
    total_casos_2018 = sum(`2018`, na.rm = TRUE),
    total_casos_2019 = sum(`2019`, na.rm = TRUE),
    total_casos_2020 = sum(`2020`, na.rm = TRUE),
    total_casos_2021 = sum(`2021`, na.rm = TRUE),
    total_casos_2022 = sum(`2022`, na.rm = TRUE),
    total_casos_2023 = sum(`2023`, na.rm = TRUE),
    total_casos_2024 = sum(`2024`, na.rm = TRUE),
    total_pop_2007 = sum(`X2007`, na.rm = TRUE),
    total_pop_2008 = sum(`X2008`, na.rm = TRUE),
    total_pop_2009 = sum(`X2009`, na.rm = TRUE),
    total_pop_2010 = sum(`X2010`, na.rm = TRUE),
    total_pop_2011 = sum(`X2011`, na.rm = TRUE),
    total_pop_2012 = sum(`X2012`, na.rm = TRUE),
    total_pop_2013 = sum(`X2013`, na.rm = TRUE),
    total_pop_2014 = sum(`X2014`, na.rm = TRUE),
    total_pop_2015 = sum(`X2015`, na.rm = TRUE),
    total_pop_2016 = sum(`X2016`, na.rm = TRUE),
    total_pop_2017 = sum(`X2017`, na.rm = TRUE),
    total_pop_2018 = sum(`X2018`, na.rm = TRUE),
    total_pop_2019 = sum(`X2019`, na.rm = TRUE),
    total_pop_2020 = sum(`X2020`, na.rm = TRUE),
    total_pop_2021 = sum(`X2021`, na.rm = TRUE),
    total_pop_2022 = sum(`X2022`, na.rm = TRUE),
    total_pop_2023 = sum(`X2023`, na.rm = TRUE),
    total_pop_2024 = sum(`X2024`, na.rm = TRUE)
  )

# Calcular a taxa de incidência para cada ano (casos / população * 100.000)
dados_por_regiao <- dados_por_regiao %>%
  mutate(
    taxa_incidencia_2007 = (total_casos_2007 / total_pop_2007) * 100000,
    taxa_incidencia_2008 = (total_casos_2008 / total_pop_2008) * 100000,
    taxa_incidencia_2009 = (total_casos_2009 / total_pop_2009) * 100000,
    taxa_incidencia_2010 = (total_casos_2010 / total_pop_2010) * 100000,
    taxa_incidencia_2011 = (total_casos_2011 / total_pop_2011) * 100000,
    taxa_incidencia_2012 = (total_casos_2012 / total_pop_2012) * 100000,
    taxa_incidencia_2013 = (total_casos_2013 / total_pop_2013) * 100000,
    taxa_incidencia_2014 = (total_casos_2014 / total_pop_2014) * 100000,
    taxa_incidencia_2015 = (total_casos_2015 / total_pop_2015) * 100000,
    taxa_incidencia_2016 = (total_casos_2016 / total_pop_2016) * 100000,
    taxa_incidencia_2017 = (total_casos_2017 / total_pop_2017) * 100000,
    taxa_incidencia_2018 = (total_casos_2018 / total_pop_2018) * 100000,
    taxa_incidencia_2019 = (total_casos_2019 / total_pop_2019) * 100000,
    taxa_incidencia_2020 = (total_casos_2020 / total_pop_2020) * 100000,
    taxa_incidencia_2021 = (total_casos_2021 / total_pop_2021) * 100000,
    taxa_incidencia_2022 = (total_casos_2022 / total_pop_2022) * 100000,
    taxa_incidencia_2023 = (total_casos_2023 / total_pop_2023) * 100000,
    taxa_incidencia_2024 = (total_casos_2024 / total_pop_2024) * 100000
  )



# Transformar para o formato long para visualização no gráfico de linhas
dados_por_regiao_long <- dados_por_regiao %>%
  pivot_longer(
    cols = starts_with("taxa_incidencia_"),
    names_to = "ANO",
    names_prefix = "taxa_incidencia_",
    values_to = "taxa_incidencia"
  )

# Criar o gráfico de linhas com pontos e rótulos
regiao1 <- ggplot(dados_por_regiao_long, aes(x = as.numeric(ANO), y = taxa_incidencia, color = REGIAO, group = REGIAO)) +
  geom_line(size = 1) +
  geom_point(size = 2) + # Bolinhas
  geom_text(aes(label = round(taxa_incidencia, 1)), vjust = -0.5, size = 3) +  # Adiciona rótulos aos pontos
  scale_x_continuous(breaks = seq(2007, 2024, by = 1)) +  # Garante que todos os anos apareçam no eixo x
  labs(title = "Coeficiente de Incidência de Intoxicações Exógenas por Agrotóxicos no Brasil por Grande Região",
       subtitle = "por 100.000 habitantes",
       x = "Ano",
       y = "Coeficiente de incidência",
       color = "Região") +  
  theme_classic() +
  theme(legend.title = element_blank(), legend.text = element_text(size = 10))  # Remove o título adicional da legenda e ajusta o texto

# Salvar o gráfico de região
ggsave("./RESULTADOS/Indicadores/1_Regiao.png", plot = regiao1, width = 16, height = 9, dpi = 400, units = "in")





sum(dados_unidos$`2023` != 0)
