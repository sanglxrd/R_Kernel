dados_ERRO <- read.csv2("./dados_com_erros_coordenadas_UF.csv", sep = ",")

dados_ERRO$X <- NULL

# Renomear colunas removendo o prefixo "X."
colnames(dados_ERRO) <- gsub("^X\\.", "", colnames(dados_ERRO))

dados_ERRO <- dados_ERRO %>%
  rename(CO_AREA = CO_AREA.)


dados <- dados_ERRO
# Supondo que o campo "uf" contém os códigos dos estados como texto
dados$uf <- dplyr::case_when(
  dados$uf == "12" ~ "Acre",
  dados$uf == "27" ~ "Alagoas",
  dados$uf == "16" ~ "Amapá",
  dados$uf == "13" ~ "Amazonas",
  dados$uf == "29" ~ "Bahia",
  dados$uf == "23" ~ "Ceará",
  dados$uf == "53" ~ "Distrito Federal",
  dados$uf == "32" ~ "Espírito Santo",
  dados$uf == "52" ~ "Goiás",
  dados$uf == "21" ~ "Maranhão",
  dados$uf == "51" ~ "Mato Grosso",
  dados$uf == "50" ~ "Mato Grosso do Sul",
  dados$uf == "31" ~ "Minas Gerais",
  dados$uf == "15" ~ "Pará",
  dados$uf == "25" ~ "Paraíba",
  dados$uf == "41" ~ "Paraná",
  dados$uf == "26" ~ "Pernambuco",
  dados$uf == "22" ~ "Piauí",
  dados$uf == "24" ~ "Rio Grande do Norte",
  dados$uf == "43" ~ "Rio Grande do Sul",
  dados$uf == "33" ~ "Rio de Janeiro",
  dados$uf == "11" ~ "Rondônia",
  dados$uf == "14" ~ "Roraima",
  dados$uf == "42" ~ "Santa Catarina",
  dados$uf == "35" ~ "São Paulo",
  dados$uf == "28" ~ "Sergipe",
  dados$uf == "17" ~ "Tocantins",
  TRUE ~ NA_character_  # Caso algum código não esteja na lista, retorna NA
)

# Carregar a base de referência com os códigos e nomes dos municípios
id_municipios <- read.csv2("F:/lucas.sanglard/OneDrive - Ministério da Saúde/Área de Trabalho/ROTINA_VSPEA/dict/ID_MUNICIP.csv", fileEncoding = "latin1")

# Supondo que `X.CO_MUNICIP` seja a coluna de código do município na base principal
dados <- dplyr::left_join(dados, id_municipios, by = c("CO_MUNICI" = "key"))

dados <- dados %>%
  rename(NM_MUNICIP = value,
         Estado = uf)


# Remover aspas de todas as colunas do tipo character
dados[] <- lapply(dados, function(x) {
  if (is.character(x)) {
    x <- gsub('"', '', x)
  }
  return(x)
})

dados <- dados %>%
  mutate(NU_LATITU = as.numeric(NU_LATITU),
         NU_LONGIT = as.numeric(NU_LONGIT)) |> 
  mutate(
    NU_LATITU = ifelse(is.na(NU_LATITU), 0, NU_LATITU),
    NU_LONGIT = ifelse(is.na(NU_LONGIT), 0, NU_LONGIT)
  )


write.csv(dados, "./dados_coord_erro1.csv")














#remover duplicadas
sissolo_n_duplicidade <- read.csv2("SISSOLO_limp_calc_raio.csv", sep = ",")

colnames(sissolo_n_duplicidade)

df_cleaned <- sissolo_n_duplicidade |> 
  distinct(CO_AREA, .keep_all = TRUE)


write.csv(dados, "./dados_n_duplicid_.csv")

o que mudei nesse banco do sissolo foi o seguinte: SISSOLO_limp <- dados %>% 
  mutate(densidade = round(v0001 / AREA_KM2)) %>% 
  mutate(
    pop_exp_05 = ifelse(AREA_KM2 < area05, v0001, round(densidade * area05)),
    pop_exp_1 = ifelse(AREA_KM2 < area1, v0001, round(densidade * area1)),
    pop_exp_2 = ifelse(AREA_KM2 < area2, v0001, round(densidade * area2))
  ) %>% 
  select(CO_AREA, NM_REGIAO, NM_UF, NM_MUN, NO_CONTAM, X.NU_LATITU, X.NU_LONGIT, v0001, AREA_KM2, densidade, pop_exp_05, pop_exp_1, pop_exp_2)
